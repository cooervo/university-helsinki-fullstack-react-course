{"version":3,"sources":["components/Person.js","components/Notification.js","components/Footer.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","toggleImportance","console","log","important","react_default","a","createElement","className","name","number","Notification","message","Footer","style","color","fontStyle","fontSize","services_persons","request","axios","get","nonExisting","id","content","date","then","response","data","concat","newObject","post","put","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newPerson","setNewPerson","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","personsToShow","filter","p","toggleImportanceOf","find","changedNote","objectSpread","returnedPerson","map","catch","error","setTimeout","components_Notification","onClick","components_Person","key","onSubmit","e","preventDefault","Date","toISOString","Math","random","length","value","onChange","event","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cfd468c8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({person, toggleImportance}) => {\n  console.log('person!!!!!!', person);\n  const label = person.important\n    ? 'make not important' : 'make important';\n\n  return (\n    <li className='person'>\n      Name: {person.name}\n      <br/>\n      Number: {person.number}\n      {/*TODO <button onClick={toggleImportance}>{label}</button>*/}\n    </li>\n  );\n};\n\nexport default Person;\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification ","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nexport default Footer ","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This person is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, {useState, useEffect} from 'react';\nimport Person from './components/Person';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport personsService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Allows the use of side effects in function components\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(p => p.important);\n\n  const rows = () => personsToShow.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      toggleImportance={() => toggleImportanceOf(person.id)}\n    />\n  );\n\n  const handlePersonChange = (event) => {\n    setNewPerson(event.target.value);\n  };\n\n  console.log('newPerson!!!!!!!!!!!!!!!!!!!', newPerson);\n\n  const addPerson = e => {\n    e.preventDefault();\n    const person = {\n      name: newPerson,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: persons.length + 1,\n    };\n\n    personsService\n      .create(person)\n      .then(data => {\n        setPersons(persons.concat(data));\n        setNewPerson('');\n      });\n  };\n\n  const toggleImportanceOf = id => {\n    const person = persons.find(p => p.id === id);\n    const changedNote = {...person, important: !person.important};\n\n    personsService\n      .update(id, changedNote)\n      .then(returnedPerson => {\n        setPersons(persons.map(p => p.id !== id ? p : returnedPerson));\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${person.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setPersons(persons.filter(p => p.id !== id));\n      });\n\n  };\n\n  return (\n    <div>\n      <h1>Persons</h1>\n\n      <Notification message={errorMessage}/>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addPerson}>\n        <input\n          value={newPerson}\n          onChange={handlePersonChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}